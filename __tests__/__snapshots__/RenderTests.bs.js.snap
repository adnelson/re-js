// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`\`if\` with else 1`] = `
"if (!foobar) {
  bloop();
} else {
  bleep();
}"
`;

exports[`\`if\` without else 1`] = `
"if (!foobar) {
  bloop();
}"
`;

exports[`\`try catch\` with variable 1`] = `
"try {
  if (!foobar) {
    bloop();
  }
} catch (e) {
  if (!foobar) {
    bloop();
  } else {
    bleep();
  }
}"
`;

exports[`\`try catch\` without variable 1`] = `
"try {
  123;
} catch {
  if (!foobar) {
    bloop();
  } else {
    bleep();
  }
}"
`;

exports[`addition 1`] = `"foo + bar;"`;

exports[`class 1`] = `
"class MyClass extends CoolClass {
  yo(flarp) {
    console.log('yo there!', flarp);
  }
  static beepBoop(x, y, z) {
    console.log('static!');
  }
  blarp = boop => 'xyz';
}"
`;

exports[`destructuring 1`] = `"const [baz, qux] = doSomething();"`;

exports[`destructuring argument 1`] = `"({ x }, [y]) => x + y;"`;

exports[`everything 1`] = `
"import React from 'react';
import { MyContainer } from '@foo/bar';
import { StyleSheet, Text } from 'react-native';
const styles = StyleSheet.create({
  screenContainerWD: { alignItems: 'center', justifyContent: 'center' },
});
export const hello = () => {
  const foo = 'hello ' + 'world!';
  const bar = foo ? 'x' : 'y';
  class MyClass extends CoolClass {
    yo(flarp) {
      console.log('yo there!', flarp);
    }
    static beepBoop(x, y, z) {
      console.log('static!');
    }
    blarp = boop => 'xyz';
  }
  class BlankCopyScreen extends React.PureComponent {
    render() {
      return (
        <ScreenContainer
          hasSafeArea={true}
          scrollable={false}
          style={styles.screenContainerWD}
        >
          <Text>Hello World!</Text>
        </ScreenContainer>
      );
    }
  }
  console.log('hello world!');
  foo.bar.baz.qux();
  foo.bar.baz.qux(6969, 'hello');
  async x => {
    console.log('hello world!', await x);
    console.log(\`hello world!\${x}\`);
  };
  <Foo flab={123.4}></Foo>;
  return [123, 0.123, 'hi'];
};
export default hello;"
`;

exports[`example1 1`] = `"const foo = 'hello ' + 'world!';"`;

exports[`example2 1`] = `"const bar = foo ? 'x' : 'y';"`;

exports[`hello 1`] = `
"() => {
  const foo = 'hello ' + 'world!';
  const bar = foo ? 'x' : 'y';
  class MyClass extends CoolClass {
    yo(flarp) {
      console.log('yo there!', flarp);
    }
    static beepBoop(x, y, z) {
      console.log('static!');
    }
    blarp = boop => 'xyz';
  }
  class BlankCopyScreen extends React.PureComponent {
    render() {
      return (
        <ScreenContainer
          hasSafeArea={true}
          scrollable={false}
          style={styles.screenContainerWD}
        >
          <Text>Hello World!</Text>
        </ScreenContainer>
      );
    }
  }
  console.log('hello world!');
  foo.bar.baz.qux();
  foo.bar.baz.qux(6969, 'hello');
  async x => {
    console.log('hello world!', await x);
    console.log(\`hello world!\${x}\`);
  };
  <Foo flab={123.4}></Foo>;
  return [123, 0.123, 'hi'];
};"
`;

exports[`iife 1`] = `
"(() => {
  const n = 123;
  return n;
})();"
`;

exports[`iife try/catch 1`] = `
"(() => {
  try {
    console.log('hello world!');
    return 123;
  } catch {
    console.log('oh no!');
    return -12345;
  }
})();"
`;

exports[`iife try/catch with var 1`] = `
"(() => {
  try {
    console.log('hello world!');
    return 123;
  } catch (e) {
    console.log('oh no! Error:', e);
    return -12345;
  }
})();"
`;

exports[`iife with statements 1`] = `
"(() => {
  console.log('hello world!');
  return 123;
})();"
`;

exports[`not null 1`] = `"foo + bar != null;"`;

exports[`reactComponentClass 1`] = `
"class BlankCopyScreen extends React.PureComponent {
  render() {
    return (
      <ScreenContainer
        hasSafeArea={true}
        scrollable={false}
        style={styles.screenContainerWD}
      >
        <Text>Hello World!</Text>
      </ScreenContainer>
    );
  }
}"
`;
